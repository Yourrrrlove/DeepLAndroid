name: Compare WebView Screenshots

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"
  workflow_run:
    workflows: [ "Generate WebView Screenshots" ]
    types:
      - completed

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  compare-screenshots:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Android SDK components
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-35-x86_64

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          arch: x86_64
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run screenshot tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          arch: x86_64
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: |
            ./gradlew executeScreenshotTests || true

      - name: Prepare report for GitHub Pages
        run: |
          mkdir -p public
          if [ -d "app/build/reports/shot/debug/verification" ]; then
            cp -r app/build/reports/shot/debug/verification/* public/
          else
            echo "<h1>No screenshot report found</h1>" > public/index.html
          fi
      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - name: Upload comparison results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: screenshot-comparison-${{ github.run_id }}
          path: |
            app/build/reports/shot/debug/verification/
            public/
          retention-days: 30

  deploy:
    needs: compare-screenshots
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  check-result:
    needs: [ compare-screenshots, deploy ]
    runs-on: ubuntu-latest
    steps:
      - name: Download comparison artifact
        uses: actions/download-artifact@v4
        with:
          name: screenshot-comparison-${{ github.run_id }}

      - name: Fail job if diff found
        run: |
          REPORT=$(find . -type f -name "TEST-Shot.xml" | head -n 1)
          if [ -z "$REPORT" ]; then
            echo "❌ TEST-Shot.xml not found"
            exit 1
          fi
          if grep -q "<failure" "$REPORT"; then
            echo "❌ Screenshot diff detected"
            exit 1
          else
            echo "✅ No screenshot diff detected"
          fi